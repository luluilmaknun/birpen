stages:
  - test
  - staging
  - production

UnitTestVue:
  image: node:alpine
  stage: test
  before_script:
    - yarn install
  when: on_success
  script:
    - yarn test

UnitTestDjango:
  image: python:3.6
  stage: test
  before_script:
    - pip install -r requirements.txt
    - pip install -r requirements_dev.txt
  when: on_success
  script:
    - python3 run_lint.py
    - coverage run --include='landing_page/*,pengumuman/*,permohonan_surat/*' manage.py test
    - coverage report -m

Staging Deployment:
  image: ruby:2.4
  stage: staging
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  script:
    - dpl --provider=heroku --app=$STAGING_HEROKU_APPNAME --api-key=$STAGING_HEROKU_APIKEY
    - export HEROKU_API_KEY=$STAGING_HEROKU_APIKEY
    - heroku run --app $STAGING_HEROKU_APPNAME migrate
  environment:
    name: production
    url: $STAGING_HEROKU_APP_HOST
  only:
    - staging

Production Deployment:
  image: ruby:2.4
  stage: production
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  script:
    - dpl --provider=heroku --app=$HEROKU_APPNAME --api-key=$HEROKU_APIKEY
    - export HEROKU_API_KEY=$HEROKU_APIKEY
    - heroku run --app $HEROKU_APPNAME migrate
  environment:
    name: production
    url: $HEROKU_APP_HOST
  only:
    - master    